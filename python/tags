!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/0d87063f/
Action	tRexManager.py	/^class Action(object):$/;"	c
Agent	tRexManager.py	/^class Agent(object):$/;"	c
CHROME_EXECUTABLEPATH	tRexManager.py	/^CHROME_EXECUTABLEPATH = '\/usr\/bin\/chromedriver'$/;"	v
CHROME_PATH	tRexManager.py	/^CHROME_PATH = '\/usr\/bin\/google-chrome'$/;"	v
CUR_PATH	tRexManager.py	/^CUR_PATH = os.path.dirname(os.path.abspath(__file__))$/;"	v
ChromeDriver	tRexManager.py	/^class ChromeDriver(object):$/;"	c
Game	tRexManager.py	/^class Game(object):$/;"	c
HEIGHT	tRexManager.py	/^HEIGHT = 150$/;"	v
PATH_TO_IMAGE_FOLDER	tRexManager.py	/^PATH_TO_IMAGE_FOLDER = os.path.join(CUR_PATH, '..\/imagesToCheck')$/;"	v
Prepocessor	tRexModel.py	/^class Prepocessor(object):$/;"	c
State	tRexManager.py	/^class State(object):$/;"	c
TFRexModel	tRexModel.py	/^class  TFRexModel(object):$/;"	c
TREX_HTML_PATH	tRexManager.py	/^TREX_HTML_PATH = 'file:\/\/{}\/..\/javascript\/index.html'.format(CUR_PATH)$/;"	v
TRexGame	tRexManager.py	/^class TRexGame(Game):$/;"	c
WIDTH	tRexManager.py	/^WIDTH = 600$/;"	v
__call__	tRexManager.py	/^    def __call__(self):$/;"	m	class:Action
__init__	tRexManager.py	/^    def __init__(self):$/;"	m	class:Game
__init__	tRexManager.py	/^    def __init__(self, action_fn, reward, code=None):$/;"	m	class:Action
__init__	tRexManager.py	/^    def __init__(self, display):$/;"	m	class:ChromeDriver
__init__	tRexManager.py	/^    def __init__(self, display=False):$/;"	m	class:TRexGame
__init__	tRexManager.py	/^    def __init__(self, game, model, mode, epoch_to_collect_data):$/;"	m	class:Agent
__init__	tRexManager.py	/^    def __init__(self, image, reward, crashed, timestamp):$/;"	m	class:State
__init__	tRexModel.py	/^    def __init__(self):$/;"	m	class:Prepocessor
__init__	tRexModel.py	/^    def __init__(self):$/;"	m	class:TFRexModel
_do_action	tRexManager.py	/^    def _do_action(self, action_code, time_to_execute_action):$/;"	m	class:TRexGame
_get_raw_image	tRexManager.py	/^    def _get_raw_image(self):$/;"	m	class:ChromeDriver
_press_down	tRexManager.py	/^    def _press_down(self):$/;"	m	class:TRexGame
_press_up	tRexManager.py	/^    def _press_up(self):$/;"	m	class:TRexGame
_restart	tRexManager.py	/^    def _restart(self):$/;"	m	class:TRexGame
agent	tRexManager.py	/^    agent = Agent(game=game, model=model, mode='train', epoch_to_collect_data=2)$/;"	v
args	tRexManager.py	/^    args = parser.parse_args()$/;"	v
build_model	tRexModel.py	/^    def build_model(self):$/;"	m	class:TFRexModel
configure_driver	tRexManager.py	/^    def configure_driver(self, chromeOptions):$/;"	m	class:ChromeDriver
do_action	tRexManager.py	/^    def do_action(self, action_code):$/;"	m	class:Agent
do_action	tRexManager.py	/^    def do_action(self, action_code, time_to_execute_action):$/;"	m	class:Game
end	tRexManager.py	/^    def end(self):$/;"	m	class:Agent
end	tRexManager.py	/^    def end(self):$/;"	m	class:Game
end	tRexManager.py	/^    def end(self):$/;"	m	class:TRexGame
execute	tRexManager.py	/^    def execute(self):$/;"	m	class:Agent
game	tRexManager.py	/^    game = TRexGame(display=args.display)$/;"	v
get_action	tRexModel.py	/^    def get_action(self, environmentState):$/;"	m	class:TFRexModel
get_image	tRexManager.py	/^    def get_image(self):$/;"	m	class:State
get_image_as	tRexManager.py	/^    def get_image_as(self, dtype):$/;"	m	class:ChromeDriver
get_score	tRexManager.py	/^    def get_score(self):$/;"	m	class:TRexGame
get_state	tRexManager.py	/^    def get_state(self, action):$/;"	m	class:Game
get_state	tRexManager.py	/^    def get_state(self, action_code):$/;"	m	class:TRexGame
get_state_data_as_list	tRexManager.py	/^    def get_state_data_as_list(self):$/;"	m	class:State
get_time_stamp	tRexManager.py	/^    def get_time_stamp(self):$/;"	m	class:State
get_time_to_execute_action	tRexModel.py	/^    def get_time_to_execute_action(self):$/;"	m	class:TFRexModel
is_crashed	tRexManager.py	/^    def is_crashed(self):$/;"	m	class:Game
is_crashed	tRexManager.py	/^    def is_crashed(self):$/;"	m	class:State
is_crashed	tRexManager.py	/^    def is_crashed(self):$/;"	m	class:TRexGame
is_running	tRexManager.py	/^    def is_running(self):$/;"	m	class:Game
is_running	tRexManager.py	/^    def is_running(self):$/;"	m	class:TRexGame
model	tRexManager.py	/^    model = TFRexModel()$/;"	v
np	tRexManager.py	/^import numpy as np$/;"	I
parser	tRexManager.py	/^    parser = ArgumentParser()$/;"	v
play	tRexManager.py	/^    def play(self):$/;"	m	class:Agent
process	tRexModel.py	/^    def process(self, data):$/;"	m	class:Prepocessor
restart	tRexManager.py	/^    def restart(self):$/;"	m	class:Game
save_environment_screenshots	tRexManager.py	/^    def save_environment_screenshots(self, save_every_x=1):$/;"	m	class:Agent
show_environment_image	tRexManager.py	/^    def show_environment_image(self, env_image):$/;"	m	class:Game
tf	tRexModel.py	/^import tensorflow as tf$/;"	I
train	tRexManager.py	/^    def train(self):$/;"	m	class:Agent
train	tRexModel.py	/^    def train(self, training_data):$/;"	m	class:TFRexModel
